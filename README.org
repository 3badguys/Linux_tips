* Introduction
Some tips for Linux Users.

* Software Management
#+BEGIN_SRC shell
  # install package
  sudo apt install <software>
  sudo dpkg -i <xxx.deb>
#+END_SRC

* Text Editor
** Emacs
I like Emacs, and it is the best editor in the world.
Configuration: [[https://github.com/3badguys/.emacs.d][3badguys's Emacs configuration]]

** Vim
Vim will be just my second choice.
Simple configuration:
#+BEGIN_SRC shell
  set langmenu=none
  let $LANG = 'en_US'


  set cursorline
  set hlsearch

  set number
  set wrap

  set tabstop=4
  set shiftwidth=4
  set smarttab
  set cindent

  set noundofile
  set nobackup
  set noswapfile

  set guioptions-=T
  set guioptions-=m
  set guioptions-=L
  set guioptions-=r
  set guioptions-=b
#+END_SRC

* PDF Viewer
** Zathura
Zathura is a highly customizable and functional document viewer with vi-styled keybindings. It provides a minimalistic and space saving interface as well as an easy usage that mainly focuses on keyboard interaction. Different file formats are supported through plugins. Support is available for PDF, PS, DjVu and CB files.

*** Installation
#+BEGIN_SRC shell
sudo apt install zathura zathura-djvu zathura-ps zathura-cb
#+END_SRC

*** Key Binding(Default)
| Shortcut | Description                            |
|----------+----------------------------------------|
| Tab      | Show index and switch to index mode    |
| :        | Enter command                          |
| Escape   | Abort                                  |
| q        | Quit                                   |
| d        | Toggle dual page view                  |
| /, ?     | Search for text                        |
| n, N     | Search for the next or previous result |
| o, O     | Open ducument                          |
| gg       | Go to the first                        |
| G        | Go to the last                         |
| nG       | Go to the nth page                     |
| h, Left  | Scroll to the left                     |
| k, Down  | Scroll to the down                     |
| j, Up    | Scroll to the up                       |
| l, Right | Scroll to the right                    |
| C-f      | Scroll page down                       |
| C-b      | Scroll page up                         |
| C-d      | Scroll half a page down                |
| C-u      | Scroll half a page up                  |
| r        | Rotate the page                        |
| R        | Reload the document                    |
| C-r      | Recolor(grayscale and invert colors)   |
| a        | Adjust window in best-fit mode         |
| s        | Adjust window in width mode            |
| +        | Zoom in                                |
| -        | Zoom out                               |
| =        | Zoom to original size                  |
| C-m      | Toggle inputbar                        |
| C-n      | Toggle statusbar                       |
| f        | Follow links                           |
| F        | Display link target                    |

*** Configuration
emacs ~/.config/zathura/zathurarc
#+BEGIN_SRC shell
set incremental-search true
set show-v-scrollbar true
set selection-clipboard clipboard
#+END_SRC

* Search Tool
** Recoll
Recoll is a desktop full-text search tool.

*** Installation
#+BEGIN_SRC shell
sudo apt install recoll
#+END_SRC

*** Preview
[[./pictures/Recoll.png]]

* Keyborad
** Test
#+BEGIN_SRC shell
  showkey -a
  sudo showkey -k
#+END_SRC

** Recommendation
+ Cherry G80-3000/3494 RED
+ DasKeyborad Model S GREEN

* Code Lines Count
#+BEGIN_SRC shell
  ### Install cloc
  git clone https://github.com/3badguys/cloc.git
  cd cloc
  sudo ln -s `pwd`/cloc /usr/local/bin/cloc  # `pwd` get the current path

  ### Use cloc
  cd <code_path>
  cloc .
#+END_SRC

* Terminal
** PS1
#+BEGIN_SRC shell
  export PS1="\[\033[01;36m\][\u\[\033[01;35m\]@\[\033[01;36m\]\h \[\033[01;34m\]\w \[\033[01;37m\]\$?\[\033[01;36m\] ]\$\[\033[00m\] "
#+END_SRC

** dircolors
Run *ls* on a folder with directories that have a 777 permission, then these directories's color is unreadable.

#+BEGIN_SRC shell
  dircolors -p > ~/.dircolors
  # change .dircolors's OTHER_WRITABLE option from 34;42 to 30;42
  eval $(dircolors ~/.dircolors)
#+END_SRC

** rxvt-unicode(urxvt)
URxvt is a customizable terminal emulator forked from rxvt. Features of rxvt-unicode include international language support through Unicode, transparency, the ability to display multiple font types and support for Perl extensions. URxvt is one of the most popular terminal emulator in UNIX world, especially on Unixporn. It’s well known for being lightweight and riceable. But just like any other software in UNIX world, it’s ugly out of the box. So, we should configure it before we use it. URxvt configurations is commonly placed in ~/.Xresources file.

*** Installation
#+BEGIN_SRC shell
  sudo apt install rxvt-unicode
  xrdb ~/.Xresources # make the configuration work
#+END_SRC

*** Configuration
[[file:dotfiles/.Xresources][.Xresources]]

** lilyterm
LilyTerm is a terminal emulator based off of libvte that aims to be fast and lightweight, Licensed under GPLv3.

*** Installation
#+BEGIN_SRC shell
  sudo apt install libvte-dev

  git clone https://github.com/Tetralet/LilyTerm.git
  cd LilyTerm
  ./configure
  make
  sudo make install
#+END_SRC

*** Configuration
[[file:dotfiles/lilyterm/default.conf][default.conf]]

** tmux
tmux is a terminal multiplexer for Unix-like operating systems. It allows multiple terminal sessions to be accessed simultaneously in a single window. It is useful for running more than one command-line program at the same time. It can also be used to detach processes from their controlling terminals, allowing SSH sessions to remain active without being visible.

*** Installation
#+BEGIN_SRC shell
  sudo apt install tmux

  # cygwin copy to system clipborad
  # use tmux-yank plugin
  git clone https://github.com/tmux-plugins/tmux-yank
  # cygutils contain getclip/putclip
  apt-cyg install cygutils-extra
#+END_SRC

*** Configuration
[[file:dotfiles/.tmux.conf][.tmux.conf]]

*** CheatSheet
[[file:material/tmux_cheat_sheet.pdf][tmux_cheat_sheet]]

** mintty
If you use git-bash or cygwin in windows system, you can consider to config you mintty terminal:
#+BEGIN_SRC  shell
  #
  # dotfiles/.minttyrc - Configuration file for mintty terminal
  #

  BoldAsFont=no
  Font=Consolas
  FontHeight=11
  Rows=45
  Term=xterm-256color

  ForegroundColour=131,148,150
  BackgroundColour=0,43,54
  CursorColour=220,50,47

  Black=7,54,66
  BoldBlack=0,43,54
  Red=220,50,47
  BoldRed=203,75,22
  Green=133,153,0
  BoldGreen=88,110,117
  Yellow=181,137,0
  BoldYellow=101,123,131
  Blue=38,139,210
  BoldBlue=131,148,150
  Magenta=211,54,130
  BoldMagenta=108,113,196
  Cyan=42,161,152
  BoldCyan=147,161,161
  White=238,232,213
  BoldWhite=253,246,227

  Scrollbar=none

  CursorType=block

#+END_SRC

** tree
#+BEGIN_SRC shell
  # show color when using tree command
  alias tree='tree -FC'
#+END_SRC

* Git
** Installation
#+BEGIN_SRC shell
  sudo apt install git
  git --version
#+END_SRC

** Frequently-used command
#+BEGIN_SRC shell
  git clone <repo-url>

  git status
  git log

  git diff
  git diff --stat
  git diff <commit-id> --stat

  git branch
  git branch -a
  git checkout <branch-name>

  git remote -v
  git remote add origin <remote-url>

  # merge upstream to local
  git remote add upstream <upstream-url>
  git fetch upstream
  git merge upstream/master

  # config file is ~/.gitconfig
  git config --list
  git config --global user.name <user-name>
  git config --global user.email <user-email>
  git config --global core.editor emacs

  git reset <commit-id> --hard

  git checkout -b <local-branch> <remote-branch>

  git add .
  git commit -m "commit-massage"
  git push origin <remote-branch>

  git commit --amend
  git push orgin <remote-branch>

  git rebase HEAD~2
  git push -f origin <remote-branch>
#+END_SRC

** tig
Tig is an ncurses-based text-mode interface for git. It functions mainly as a Git repository browser, but can also assist in staging changes for commit at chunk level and act as a pager for output from various Git commands.

#+BEGIN_SRC shell
  sudo apt install tig
  tig  # click 'h'(help) to view the help-message
#+END_SRC
